#include <stdio.h>
#include <conio.h>
#include <stdlib.h>
#include <windows.h>
#include <time.h>

//맵 베이스  
int map1base(int a[8][8])
{
	//0 텅 빈 공간, 1 자신, 2 밀기 가능한 벽, 3 포탈, 4 밀기 불가능한 벽  
	a[0][0]=4;
	a[0][1]=4;
	a[0][2]=4;
	a[0][3]=4;
	a[0][4]=4;
	a[0][5]=4;
	a[0][6]=4;
	a[0][7]=4;
	a[1][0]=4;
	a[1][1]=4;
	a[1][2]=4;
	a[1][3]=1;
	a[1][4]=0;
	a[1][5]=0;
	a[1][6]=0;
	a[1][7]=4;
	a[2][0]=4;
	a[2][1]=0;
	a[2][2]=0;
	a[2][3]=2;
	a[2][4]=4;
	a[2][5]=4;
	a[2][6]=0;
	a[2][7]=4;
	a[3][0]=4;
	a[3][1]=0;
	a[3][2]=4;
	a[3][3]=0;
	a[3][4]=4;
	a[3][5]=4;
	a[3][6]=0;
	a[3][7]=4;
	a[4][0]=4;
	a[4][1]=0;
	a[4][2]=4;
	a[4][3]=0;
	a[4][4]=4;
	a[4][5]=4;
	a[4][6]=0;
	a[4][7]=4;
	a[5][0]=4;
	a[5][1]=0;
	a[5][2]=0;
	a[5][3]=0;
	a[5][4]=0;
	a[5][5]=0;
	a[5][6]=0;
	a[5][7]=4;
	a[6][0]=4;
	a[6][1]=4;
	a[6][2]=4;
	a[6][3]=4;
	a[6][4]=4;
	a[6][5]=4;
	a[6][6]=3;
	a[6][7]=4;
	a[7][0]=4;
	a[7][1]=4;
	a[7][2]=4;
	a[7][3]=4;
	a[7][4]=4;
	a[7][5]=4;
	a[7][6]=4;
	a[7][7]=4;
}

//맵 베이스  
int map2base(int a[8][8])
{
	//0 텅 빈 공간, 1 자신, 2 밀기 가능한 벽, 3 포탈, 4 밀기 불가능한 벽  
	a[0][0]=4;
	a[0][1]=4;
	a[0][2]=4;
	a[0][3]=4;
	a[0][4]=4;
	a[0][5]=4;
	a[0][6]=4;
	a[0][7]=4;
	a[1][0]=4;
	a[1][1]=1;
	a[1][2]=4;
	a[1][3]=4;
	a[1][4]=4;
	a[1][5]=4;
	a[1][6]=3;
	a[1][7]=4;
	a[2][0]=4;
	a[2][1]=0;
	a[2][2]=4;
	a[2][3]=4;
	a[2][4]=4;
	a[2][5]=4;
	a[2][6]=0;
	a[2][7]=4;
	a[3][0]=4;
	a[3][1]=0;
	a[3][2]=4;
	a[3][3]=4;
	a[3][4]=4;
	a[3][5]=4;
	a[3][6]=0;
	a[3][7]=4;
	a[4][0]=4;
	a[4][1]=0;
	a[4][2]=2;
	a[4][3]=0;
	a[4][4]=0;
	a[4][5]=0;
	a[4][6]=2;
	a[4][7]=3;
	a[5][0]=4;
	a[5][1]=0;
	a[5][2]=4;
	a[5][3]=4;
	a[5][4]=4;
	a[5][5]=4;
	a[5][6]=0;
	a[5][7]=4;
	a[6][0]=4;
	a[6][1]=0;
	a[6][2]=0;
	a[6][3]=0;
	a[6][4]=0;
	a[6][5]=0;
	a[6][6]=0;
	a[6][7]=4;
	a[7][0]=4;
	a[7][1]=4;
	a[7][2]=4;
	a[7][3]=4;
	a[7][4]=4;
	a[7][5]=4;
	a[7][6]=4;
	a[7][7]=4;
}

//맵 만들기  
int map(int a[8][8])
{
	int y,b;
	
	for(y=0;y<8;y++)
	{
		for(b=0;b<8;b++)
		{
			if(a[y][b]==0)
			{
				printf("  ");
				if(b==7)
			    {
				    printf("\n");
			    }
			}
			else if(a[y][b]==1)
			{
				printf(" *");
				if(b==7)
			    {
				    printf("\n");
			    }
			}
			else if(a[y][b]==2)
			{
				printf(" #");
				if(b==7)
			    {
				    printf("\n");
			    }
			}
			else if(a[y][b]==3)
			{
				printf(" @");
				if(b==7)
			    {
				    printf("\n");
			    }
			}
			else if(a[y][b]==4)
			{
				printf(" 0");
				if(b==7)
			    {
				    printf("\n");
			    }
			}
		}
	}
}
//이동 함수  
int move(char t, int a[8][8], int *cd)
{
	int y,b,c,cy,cb,d;
	//자기 자리 찾는 중  
	for(y=0;y<8;y++)
	{
		for(b=0;b<8;b++)
		{
			if(a[y][b]==1)
			{
				cy=y;
				cb=b;
			}
		}
		
	}
	//본격적인 이동 
	if(t=='w'&&cy>0&&a[cy-1][cb]!=2&&a[cy-1][cb]!=3&&a[cy-1][cb]!=4)
	{
	    c=a[cy][cb];
		a[cy][cb]=a[cy-1][cb];
		a[cy-1][cb]=c;
	}
	else if(t=='a'&&cb>0&&a[cy][cb-1]!=2&&a[cy][cb-1]!=3&&a[cy][cb-1]!=4)
	{
		c=a[cy][cb];
		a[cy][cb]=a[cy][cb-1];
		a[cy][cb-1]=c;
	}
	else if(t=='s'&&cy<7&&a[cy+1][cb]!=2&&a[cy+1][cb]!=3&&a[cy+1][cb]!=4)
	{
		c=a[cy][cb];
		a[cy][cb]=a[cy+1][cb];
		a[cy+1][cb]=c;
	}
	else if(t=='d'&&cb<7&&a[cy][cb+1]!=2&&a[cy][cb+1]!=3&&a[cy][cb+1]!=4)
	{
		c=a[cy][cb];
		a[cy][cb]=a[cy][cb+1];
		a[cy][cb+1]=c;
	}
	//벽 밀기  
	else if(t=='q')
	{
		if(a[cy-1][cb]==2&&(cy-1)>0&&a[cy-2][cb]!=2&&a[cy-2][cb]!=4)
		{
			if(a[cy-2][cb]==3)
			{
				a[cy-2][cb]=a[cy-1][cb];
				a[cy-1][cb]=0;
				++*cd;
			}
			else
			{
				c=a[cy-1][cb];
			    a[cy-1][cb]=a[cy-2][cb];
			    a[cy-2][cb]=c;
			}
		}
		else if(a[cy][cb-1]==2&&(cb-1)>0&&a[cy][cb-2]!=2&&a[cy][cb-2]!=4)
		{
			if(a[cy][cb-2]==3)
			{
				a[cy][cb-2]=a[cy][cb-1];
				a[cy][cb-1]=0;
				++*cd;
			}
			else
			{
				c=a[cy][cb-1];
			    a[cy][cb-1]=a[cy][cb-2];
			    a[cy][cb-2]=c;
			}
		}
		else if(a[cy+1][cb]==2&&(cy+1)<7&&a[cy+2][cb]!=2&&a[cy+2][cb]!=4)
		{
			if(a[cy+2][cb]==3)
			{
				a[cy+2][cb]=a[cy+1][cb];
				a[cy+1][cb]=0;
				++*cd;
			}
			else
			{
				c=a[cy+1][cb];
		    	a[cy+1][cb]=a[cy+2][cb];
		    	a[cy+2][cb]=c;
			}
		}
		else if(a[cy][cb+1]==2&&(cb+1)<7&&a[cy][cb+2]!=2&&a[cy][cb+2]!=4)
		{
			if(a[cy][cb+2]==3)
			{
				a[cy][cb+2]=a[cy][cb+2];
				a[cy][cb+1]=0;
				++*cd;
			}
			else
			{
				c=a[cy][cb+1];
		    	a[cy][cb+1]=a[cy][cb+2];
		    	a[cy][cb+2]=c;
			}
		}
	}
}

int main()
{
	int a[8][8];
	int b,c,d=0,e;
	int *cd;
	char t;
	
	map1base(a);
	map(a);
	
	for(;;)
	{
		printf("    map1\n");
		t=getch();
		move(t,a,&d);
		system("cls");
		map(a);
		if(d==1)
		{
			Sleep(100);
			system("cls");
			printf("    \n\nnext map\n");
			break;
		}
	}
	
	Sleep(1000);
	system("cls");
	
	map2base(a);
	map(a);
	
	for(;;)
	{
		printf("    map2\n");
		t=getch();
		move(t,a,&d);
		system("cls");
		map(a);
		if(d==3)
		{
			Sleep(100);
			system("cls");
			printf("    \n\nfinish!!");
			break;
		}
	}
	
	for(;;);
}
